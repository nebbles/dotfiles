#!/bin/sh
#
# dot
#
# `dot` handles installation, updates, things like that. Run it periodically
# to make sure you're on the latest and greatest.

set -e

# echo "--> the dot install failed"
# exit 1

thisDirectory="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P)"
dotfilesDirectory="$(cd "$( dirname "$thisDirectory" )" && pwd -P)"

# Define the function used for the CLI.
displayUsageAndExit() {
	echo "dot -- dotfiles management"
	echo ""
	echo "Usage: dot [options]"
	echo ""
	echo "Options:"
	echo "  -e, --edit          Open dotfiles directory for editing"
	echo "  -h, --help          Show this help message and exit"
	echo "  --set-macos         Set the defaults for macOS"
	echo "  --install-brew      Install Homebrew on the system"
	echo "  --update-brew       Install Homebrew on the system"
	echo "  --install-topics    Run all install scripts in dot repo"
	echo "  --bootstrap         Runs all installs and update functions"
	exit
}

set_macos () {
    # Set macOS defaults
    # $DOTFILES/macos/set-defaults.sh
    echo "Setting macOS defaults is not yet supported"
}

install_brew () {
    # Install homebrew - not sure we need to redirect outputs...
    $DOTFILES/homebrew/install.sh #2>&1
}

update_brew () {
    # Update homebrew
    if test $(which brew)
    then
        echo "→ brew update"
        brew update
    else
        echo "brew is not installed"
        exit 1
    fi
}

install_topics () {
    # Run the install script (runs all install scripts in repo)
    echo "→ $DOTFILES/script/install"
    $DOTFILES/script/install
}

install_update_all () {
    set_macos
    install_brew
    update_brew
    install_topics
    echo $?
}

# Handle the Command Line arguments.
if [[ $1 = "" ]]
then
displayUsageAndExit
fi

# while test $# -gt 0; do
# while test $#; do
while [[ -n "$1" ]]
do
	case "$1" in
        "--debug")
            echo "DEBUGGING: this is a test"
			;;
		"-h"|"--help")
			displayUsageAndExit
			;;
		"-e"|"--edit")
			exec "$EDITOR" "$dotfilesDirectory"
			exit
			;;
        "--set-macos")
            set_macos
            ;;
        "--install-brew")
            install_brew
            ;;
        "--update-brew")
            update_brew
            ;;
        "--install-topics")
            install_topics
            ;;
        "--bootstrap")
            install_update_all
            ;;
		*)
			echo "Invalid option: $1"
			displayUsageAndExit
			;;
	esac
	shift # moves args left by one (i.e. $2 shifts to $1)
done

export DOTFILES=$HOME/.dotfiles
